name: Create Template Repository
on:
  workflow_dispatch:
    inputs:
      repo-name:
        description: "새로운 레포지토리 이름"
        required: true
      project-name:
        description: "프로젝트 이름"
        required: true
      package-name:
        description: "패키지 이름"
        required: true
      visibility:
        description: "레포지토리 공개 설정"
        required: true
        default: "private"
        type: choice
        options:
          - "private"
          - "public"

jobs:
  create-and-setup-repo:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout template files
        uses: actions/checkout@v4

      - name: Create Repository
        uses: actions/github-script@v7
        id: create-repo
        with:
          github-token: ${{ secrets.PAT_TOKEN }}
          script: |
            const response = await github.rest.repos.createForAuthenticatedUser({
              name: "${{ github.event.inputs.repo-name }}",
              private: "${{ github.event.inputs.visibility }}" === "private",
              auto_init: false
            });
            console.log(`Repository created: ${response.data.html_url}`);
            return response.data.full_name;

      - name: Setup and push
        run: |
          REPO_NAME=${{ steps.create-repo.outputs.result }}

          # git init 및 remote 추가만 수행
          rm -rf .git
          git init
          git remote add origin "https://x-access-token:${{ secrets.PAT_TOKEN }}@github.com/${REPO_NAME}.git"

          # setup.sh가 나머지 작업 수행
          chmod +x ./setup.sh
          ./setup.sh "${{ github.event.inputs.repo-name }}" "${{ github.event.inputs.project-name }}" "${{ github.event.inputs.package-name }}"

          # setup.sh에서 commit까지 했으므로 push만 수행
          git branch -M prod
          git push -u origin prod
